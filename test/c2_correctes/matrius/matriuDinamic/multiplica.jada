func identitat(int n) : int[][] begin
    int[][] matriu = new int[n][n];

    int k = n;

    for (int i = 0; i < n; i++) do
        for (int j = 0; j < n; j++) do
            if i == j do
                matriu[i][j] = 1;
            else do
                matriu[i][j] = 0;
            end;

            k = n + 1;
        end;
    end;

    return matriu;
end identitat;

proc pintaMatriu(int[][] matriu, int n) begin
    print("Pintant matriu\n");
    for (int i = 0; i < n; i++) do
        for (int j = 0; j < n; ++j) do
            printInt(matriu[i][j]);
            printChar(' ');
        end;
        printChar('\n');
    end;
end pintaMatriu;

func multiplica(int[][] a, int[][] b, int n) : int[][] begin
    // la matriu resultant Ã©s n x n
    int[][] resultat = new int[n][n];

    for (int i = 0; i < n; i++) do
        for (int j = 0; j < n; j++) do
            int suma = 0;
            for (int k = 0; k < n; k++) do
                suma += a[i][k] * b[k][j];
            end;

            resultat[i][j] = suma;
        end;
    end;

    return resultat;
end multiplica;

proc matriuRandom(int[][] a, int n) begin
    for (int i = 0; i < n; i++) do
        for (int j = 0; j < n; j++) do
            a[i][j] = randInt(0, 9);
        end;
    end;
end matriuRandom;

proc main() begin
    print("Introdueix les dimensions de la matriu (NxN): ");
    //int n = readInt();
    int n = 500;

    int[][] i = identitat(n);
    pintaMatriu(i, n);

    int[][] i2 = identitat(n);
    matriuRandom(i2, n);
    pintaMatriu(i2, n);
    
    int[][] resultat = multiplica(i, i2, n);

    pintaMatriu(resultat, n);
end main;