/**
 * Exemple d'un joc per consola
 * Funciona per qualsevol dimensió
 *
 * Les caselles poden tenir tres valors: 0 buida, 1 creu, 2 cercle
 */

int dimensions;
char[3] jugadorsIcona = char{'-', 'X', 'O'};

int torn;
int[][] taulerActual;

/**
 * Inicialitza un tauler buit de n x n caselles
 */
func creaTauler(int n) : int[][] begin
    int[][] tauler = new int[n][n];

    for (int i = 0; i < n; i++) do
        for (int j = 0; j < n; j++) do
            tauler[i][j] = 0;
        end;
    end;

    return tauler;
end creaTauler;

proc pintaTauler(int[][] tauler, int n) begin
    for (int i = 0; i < n; i++) do
        for (int j = 0; j < n; j++) do
            printChar(jugadorsIcona[tauler[i][j]]);
            printChar(' ');
        end;

        printChar('\n');
    end;
end pintaTauler;

/**
 * Comprova si totes les caselles del tauler estan ocupades
 */
func taulerPle(int[][] tauler, int n) : boolean begin
    boolean complet = true;

    for (int i = 0; i < n and complet; i++) do
        for (int j = 0; j < n and complet; j++) do
            complet = tauler[i][j] != 0;
        end;
    end;

    return complet;
end taulerPle;

/**
 * Comprova si un jugador guanya o no una partida
 * La condició de victòria és tenir una de les diagonals, columna o fila
 */
func guanya(int[][] tauler, int n, int jugador) : boolean begin
    boolean victoria = true;

    // comprovar si té la diagonal principal
    for (int i = 0; i < n and victoria; i++) do
        victoria = tauler[i][i] == jugador;
    end;

    // i la diagonal inversa
    if not victoria do
        victoria = true;
        for (int i = 0; i < n and victoria; i++) do
            victoria = tauler[i][n - i - 1] == jugador;
        end;
    end;

    // i alguna fila
    if not victoria do
        for (int i = 0; i < n and  not victoria; i++) do
            boolean tmpFila = true;
            for (int j = 0; j < n and tmpFila; j++) do
                tmpFila = tauler[i][j] == jugador;
            end;

            victoria = tmpFila;
        end;
    end;

    // i alguna columna
    if not victoria do
        for (int i = 0; i < n and not victoria; i++) do
            boolean tmpColumna = true;
            for (int j = 0; j < n and tmpColumna; j++) do
                tmpColumna = tauler[j][i] == jugador;
            end;

            victoria = tmpColumna;
        end;
    end;

    return victoria;
end guanya;

func jocAcabat(int[][] tauler, int n) : boolean begin
    return 
        taulerPle(tauler, n) 
            or guanya(tauler, n, 1) 
            or guanya(tauler, n, 2);
end jocAcabat;

proc main() begin
    print("Introdueix una dimensió del tauler: ");
    dimensions = readInt();

    // inicialitzar el joc
    taulerActual = creaTauler(dimensions);
    torn = randInt(1, 2);
    int numTorns = 1;

    while (true) do
        /*print("Torn ");
        printInt(numTorns);
        print(". Toca a ");
        printChar(jugadorsIcona[torn]);
        print(".\n");*/

        pintaTauler(taulerActual, dimensions);

        print("Introdueix la fila: ");
        int fila = readInt();

        print("Introdueix la columna: ");
        int columna = readInt();

        taulerActual[fila - 1][columna - 1] = torn;
        

        numTorns = numTorns + 1;
        torn = if torn == 1 do 2 else 1;
        print("\n\n");
    end;

    pintaTauler(taulerActual, dimensions);
end main;